version: '3.8'

services:
  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myapp
      MYSQL_USER: appuser
      MYSQL_PASSWORD: appuser
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my-network
    restart: unless-stopped

  # Zookeeper Service (Required for Kafka)
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-network
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-container
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-container:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - my-network
    restart: unless-stopped


  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    ports:
      - "5672:5672"  # RabbitMQ port for messaging
      - "15672:15672"  # RabbitMQ Management Web UI
    networks:
      - my-network
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"  # Redis port
    networks:
      - my-network
    restart: unless-stopped

networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local